<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!-- 配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc-mysql.properties</value>
            </list>
        </property>
    </bean>
  
    <!-- 动态数据源的父类,其中配置的参数为子数据库的default值 -->
    <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource"
           destroy-method="close">
        <property name="name">
            <value>writeDataSource</value>
        </property>
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.maxPoolSize}</value>
        </property>
        <property name="minIdle">
            <value>${jdbc.minPoolSize}</value>
        </property>
        <property name="initialSize">
            <value>${jdbc.initialPoolSize}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.idleConnectionTestPeriod}
            </value>
        </property>
    </bean>


    <bean id="slaveDataSource_1" destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
     <property name="name">
            <value>read02</value>
        </property>
        <property name="driverClassName">
            <value>${jdbc.read.db02.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.read.db02.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.read.db02.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.read.db02.password}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.read.db02.maxPoolSize}</value>
        </property>
        <property name="minIdle">
            <value>${jdbc.read.db02.minPoolSize}</value>
        </property>
        <property name="initialSize">
            <value>${jdbc.read.db02.initialPoolSize}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.read.db02.idleConnectionTestPeriod}
            </value>
        </property>
    </bean>

<!-- 
    <bean id="slaveDataSource_2" destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
         <property name="name">
            <value>read03</value>
        </property>
        <property name="driverClassName">
            <value>${jdbc.read.db03.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.read.db03.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.read.db03.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.read.db03.password}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.read.db03.maxPoolSize}</value>
        </property>
        <property name="minIdle">
            <value>${jdbc.read.db02.minPoolSize}</value>
        </property>
        <property name="initialSize">
            <value>${jdbc.read.db03.initialPoolSize}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.read.db03.idleConnectionTestPeriod}
            </value>
        </property>

    </bean>

    <bean id="slaveDataSource_3" destroy-method="close" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="name">
            <value>read04</value>
        </property>
        <property name="driverClassName">
            <value>${jdbc.read.db04.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.read.db04.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.read.db04.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.read.db04.password}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.read.db04.maxPoolSize}</value>
        </property>
        <property name="minIdle">
            <value>${jdbc.read.db04.minPoolSize}</value>
        </property>
        <property name="initialSize">
            <value>${jdbc.read.db04.initialPoolSize}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.read.db04.idleConnectionTestPeriod}
            </value>
        </property>
    </bean> -->
	<!-- 配置Routing4DB 数据源 -->
	<bean id="routing4DBDataSource" class="com.google.code.routing4db.datasource.Routing4DBDataSource">
		<property name="targetDataSources">
		<!-- 配置数据源标示符号 -->
		<map>
		   <!-- master	 datasource-->
		   <entry key="masterDataSource" value-ref="masterDataSource"></entry>
		   <!-- slave数据源编号 -->
		   <entry key="slaveDataSource_1"	value-ref="slaveDataSource_1"/>
		  <!--  <entry key="slaveDataSource_2"	value-ref="slaveDataSource_2"/>
		   <entry key="slaveDataSource_3"	value-ref="slaveDataSource_3"/> -->
		</map>
		</property>
	    <property name="defaultTargetDataSource" ref="masterDataSource"/>
	</bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="routing4DBDataSource"/>
        <property name="mapperLocations" value="classpath:config/mapping/*Mapper.xml"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="routing4DBDataSource"/>
    </bean>
	<!-- 事务配置, 事务注解@Transactional要放到实现类上,不支持放到接口上 -->
	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="routing4DBDataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<!-- 配置路由策略 -->
	<bean id="masterSlaveStrategy" class="com.google.code.routing4db.strategy.impl.MasterSlaveStrategy">
		<property name="readMethodPatterns">
			<list>
				<value>*get*</value>
				<value>*find*</value>
				<value>*query*</value>
				<value>*select*</value>
			</list>
		</property>
		<!-- Master数据源标识符 -->
		<property name="masterDataSourceKey" value="masterDataSource"></property>
		<!-- Slaves数据源 从0开始,以此编号 -->
		<property name="dataSourceKeyMap">
			<map>
				<entry key="0" value="slaveDataSource_1"></entry>
				<!-- <entry key="1" value="slaveDataSource_2"></entry>
				<entry key="2" value="slaveDataSource_3"></entry> -->
			</map>
		</property>
	</bean>
	
</beans>